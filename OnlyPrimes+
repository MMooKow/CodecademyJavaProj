// Import statement:
import java.util.ArrayList;
class PrimeDirective{
    //method to check num is prime == true
  public static boolean isPrime(int number){
      if(number==2){
      return true;
    }else if(number<2){
      return false;
    }else{
   for(int i=2;i<number;i++){
     if(number%i==0){
       return false;
     }
  }
   return true;
    }
  }
  //method to build array list of prime numbers
  //returns arraylist of ints
  //has param numbers which is int[]
  //Allows usage of OnlyPrimes with only arr[] arg
  public static void onlyPrimes(int[] numbers){
    PrimeDirective.onlyPrimes(numbers, 0);
  }

  // 1) Build a method that returns an ArrayList of the first n primes in an array.
  public static void onlyPrimes(int[] numbers, int numOfPrimes){
    ArrayList<Integer> onlyPrimesList = new ArrayList<>();
    //iterate through numbers arr. sentinal = i start = 0 end = numbers.length change=1
    for (int i=0;i<numbers.length;i++){
        if (isPrime(numbers[i])==true && onlyPrimesList.size() < numOfPrimes || isPrime(numbers[i])==true && numOfPrimes == 0){
            onlyPrimesList.add(numbers[i]);
          //   System.out.println(numbers[i] + " added");
        }
    }

    onlyPrimesList.forEach(x -> {
        System.out.println(x);
    });
  }
  // Build a method that filters an array for odd or even numbers (bonus points if it can do either depending on arguments passed in!).
  //Takes in int[] arg , String "odd" or "even"
  //if conditional to determine functionality
  //iterated through arr
  //put filtered nums into ArrayList
  //prints list
  public void FilterOddEven(int arr[], String OddOrEven){
    if(OddOrEven.toLowerCase().equals("even")){
        //new ArrayList
        ArrayList<Integer> evenList = new ArrayList<>();
        //for to iterate arr and check if even
        //sentinel = i  Start = 0  End = arr.length Change = 1
        for(int i = 0; i<arr.length;i++){
            //if arr[i] % 2 == 0 {
            //  evenList.add(arr[i]);
            //}
            if(arr[i]%2==0){
              //push to ArrayList
                evenList.add(arr[i]);
            }
        }
            //Print ArrayList
        System.out.println(evenList);

    }else if(OddOrEven.toLowerCase().equals("odd")){
        //new ArrayList
        ArrayList<Integer> oddList = new ArrayList<>();
        //for to iterate arr and check if odd
        //sentinel = i  Start = 0  End = arr.length Change = 1
        for(int i = 0; i<arr.length;i++){
            //if arr[i] % 3 == 0 {
            //  oddList.add(arr[i]);
            //}
            if(arr[i]%2!=0){
              //push to ArrayList
                oddList.add(arr[i]);
            }
        }
            //Print ArrayList
            System.out.println(oddList);
    }else System.out.println("Please choose \'odd\' or \'even\'");
  }

  // 2) Build a method that returns an ArrayList of the first n Fibonacci numbers.
  //Method takes int for the number of numbers to be figured
  //calculates the Fibonacci squence{
  //    Needs 3 int vars. var1=firstNum  var2=secondNum var3=sumNum
  //    Crate ArrayList to add numbers to then add numbers 0 and 1 to start
  //    Make for loop. Sentinel = i Start = 0 End = numberOfNums Change = 1
  //    for(int i = 0; i < numberOfNums; i++){
  //        set firstNum to fibonacci(i)
  //        set secondNum to fibonacci(i + 1)
  //        sumNum = firstNum + secondNum
  //        add sum to ArrayList
  //   }
  //    Print list outside for loop
  //  }
  public static void FibonacciSequ(int numberOfNums){
    int firstNum;
    int secondNum;
    int sumNum;
    ArrayList<Integer> fibonacciList = new ArrayList<>();
    fibonacciList.add(0);
    fibonacciList.add(1);
    for(int i = 0; i < numberOfNums; i++){
        //To figure Fibonacci, add numbers 1 and 2; number 1 increases with i; number 2 increases with i+1
        firstNum = fibonacciList.get(i);
        secondNum = fibonacciList.get(i + 1);
        sumNum = firstNum + secondNum;
        fibonacciList.add(sumNum);
    }
    System.out.println(fibonacciList);
  }
}

public class App{
  public static void main(String[] args) {

    int[] numbers = {6, 29, 28, 33, 11, 100, 101, 43, 89};
        
       PrimeDirective.onlyPrimes(numbers, 3);
    //   PrimeDirective.onlyPrimes(numbers);
    //    PrimeDirective.FilterOddEven(numbers, "even");
    //    PrimeDirective.FilterOddEven(numbers, "odd");
    //    PrimeDirective.FilterOddEven(numbers, "osasdd");
    PrimeDirective.FibonacciSequ(15);
  }

}
